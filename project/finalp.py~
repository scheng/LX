# -*- coding: utf-8 -*-
"""
Created on Sat Oct 19 15:32:37 2019

@author: Eesh Gupta
"""

Mon_Classes= []
Tue_Classes= []
Wed_Classes= []
Thu_Classes= []
Fri_Classes= []
Sat_Classes= []
Sun_Classes= []




#myFile = open("randomTextFile.txt", "rt")

#lines = myFile.readlines()
#
###filtering out uselesss info
#for line in lines:
#    if line.find("Course material information") != -1:
#        last_line = lines.index(line) 
#        break
##print(last_line)
#start_line = 9
#relevant_lines = lines[9]
s = "Web Registration System Logged in as EESH GUPTA (192008236)Log Out School of Arts & Sciences | Attempting 15.0 credits | Completed 25.0 credits Choose Semester Â» Fall 2019 Course Lookup Manage Registration View / Print Schedule PrintView: Calendar | List By Course | List By Day THE BYRNE SEMINARS (01:090:101) Section 58 | [11133] Tuesday 12:00 PM - 1:20 PM SRN-112 Busch GEN CHEM FOR ENGRS (01:160:159) Section 05 | [00095] Tuesday 10:35 AM - 11:30 AM ARC-103 Busch Thursday 8:55 AM - 9:50 AM ARC-103 Busch Friday 8:55 AM - 9:50 AM CCB-12 Busch INTRO COMPUTER SCI (01:198:111) Section 04 | [10641] Tuesday 2:50 PM - 4:10 PM AB-2160 College Avenue Thursday 2:50 PM - 4:10 PM AB-2160 College Avenue Wednesday 10:35 AM - 11:30 AM SEC-207 Busch HONORS CALCULUS III (01:640:291) Section H2 | [21906] Monday 5:00 PM - 6:20 PM SEC-205 Busch Wednesday 5:00 PM - 6:20 PM SEC-205 Busch Thursday 6:40 PM - 8:00 PM SEC-211 Busch MECHANICS (01:750:381) Section 01 | [00349] Wednesday 12:00 PM - 1:20 PM ARC-107 Busch Friday 1:40 PM - 3:00 PM ARC-107 Busch Course material information for review and purchase for all courses: Barnes & Noble, New Brunswick, Barnes & Noble, Camden, Barnes & Noble, Newark. For questions, comments or suggestions contact Camden Help Desk, Newark Help Desk, or New Brunswick/Piscataway Help Desk. Visit web sites for Camden campus, Newark campus, New Brunswick/Piscataway campus, or Rutgers University. Rutgers logo"
s = s.split('By Day')[1].split('Course material')[0]
print(s)
string = s.split()

##finding relevant lines
i=0
while i< len(string):
   
    if (string[i] == 'Monday') or (string[i] =='Tuesday') or (string[i] =='Wednesday') or (string[i] =='Thursday')or (string[i] =='Friday') or (string[i] =='Saturday') or (string[i] =='Sunday'): #or 'Wednesday' or 'Thursday' or 'Friday' or 'Saturday' or 'Sunday'):
        
   
        
        #fixing 12 hour format to 24 hour format
        if string[i+2] == 'PM':
            #correct for 12PM case
            st = string[i+1]
            if st[0:2] == '12':
                string[i+1] = float(st[0:st.index(":")])+ ((float(st[st.index(":") +1:st.index(":") +3]))/60)
            else:
                string[i+1] = float(st[0:st.index(":")])+12.0 + ((float(st[st.index(":") +1:st.index(":") +3]))/60)
        else:
            st = string[i+1]
            string[i+1] = float(st[0:st.index(":")])+ ((float(st[st.index(":") +1:st.index(":") +3]))/60)
       
        
        if string[i+5] == 'PM':
            #correct for 12PM case
            st = string[i+4]
            if st[0:2] == '12':
                string[i+4] = float(st[0:st.index(":")])+ ((float(st[st.index(":") +1:st.index(":") +3]))/60)
            else:
                string[i+4] = float(st[0:st.index(":")])+12.0 + ((float(st[st.index(":") +1:st.index(":") +3]))/60)
        else:
            st = string[i+4]
            string[i+4] = float(st[0:st.index(":")])+ ((float(st[st.index(":") +1:st.index(":") +3]))/60)
        
        #adding [start class time, end class time, class location, class campus]
        if string[i] == 'Monday':
            Mon_Classes.append([string[i+1], string[i+4], string[i+6], string[i+7]])
        elif string[i] == 'Tuesday' :
            Tue_Classes.append([string[i+1], string[i+4], string[i+6], string[i+7]])
        elif string[i] == 'Wednesday' :
            Wed_Classes.append([string[i+1], string[i+4], string[i+6], string[i+7]])
        elif string[i] == 'Thursday' :
            Thu_Classes.append([string[i+1], string[i+4], string[i+6], string[i+7]])
        elif string[i] ==  'Friday' :
            Fri_Classes.append([string[i+1], string[i+4], string[i+6], string[i+7]])
        elif string[i] == 'Saturday' :
            Sat_Classes.append([string[i+1], string[i+4], string[i+6], string[i+7]])
        elif string[i] ==  'Sunday':
            Sun_Classes.append([string[i+1], string[i+4], string[i+6], string[i+7]])
    i+=1

#sorting all arrays
Mon_Classes = sorted(Mon_Classes)
Tue_Classes = sorted(Tue_Classes)
Wed_Classes = sorted(Wed_Classes)
Thu_Classes = sorted(Thu_Classes)
Fri_Classes = sorted(Fri_Classes)
Sat_Classes = sorted(Sat_Classes)
Sun_Classes = sorted(Sun_Classes)


#commutes
days_classes = [Mon_Classes, Tue_Classes, Wed_Classes, Thu_Classes, Fri_Classes, Sat_Classes, Sun_Classes]
commutes = [[], [], [], [], [], [], []]

day = 0
while day<7:
    if len(days_classes[day]) >1:
        class_ = 1
        while class_<len(days_classes[day]):
            if days_classes[day][class_-1][3] != days_classes[day][class_][3]:
                com_time= days_classes[day][class_-1][1]
                com_from = days_classes[day][class_-1][2]
                com_to= days_classes[day][class_][2]
                commutes[day].append([com_time, com_from, com_to])
            class_+=1
    day+=1


